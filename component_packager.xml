<?xml version="1.0" encoding="UTF-8"?>
<!-- ==================================================================  -->
<!-- redSLIDER packager                                                  -->
<!-- This PHING build file generates the redSLIDER extension package     -->
<!-- To use in your environment do the following steps:                  -->
<!--    Change the following variables in build.properties file          -->
<!--            (copy variables from build.properties.dist )             -->
<!--    - change the version in variable comp.version                    -->
<!--    - change the source folder path in variable repo.dir             -->
<!--    - change the package folder path in variable package.dir         -->
<!--    - execute this PHING build file                                  -->
<!-- ==================================================================  -->
<project name="com_redslider" default="dist">
	<!-- Do initialization stuff -->
	<property file="build.properties" override="true" />

	<!-- Name of extension -->
	<property name="extension" value="${comp.name}" override="true"/>

	<!-- Load extension property in XML file -->
    <xmlproperty file="${project.basedir}/${extension}.xml" prefix="extensionDetails" keepRoot="false" />

    <!-- Get extension version from XML -->
	<property
			name="version"
			value="${comp.version}"
			override="true"/>

	<!-- Target dir where packages will be created  -->
	<property name="targetdir" value="${package.dir}/package-${extension}-v${version}" override="true"/>

    <!-- Import redCORE framework compiler script  -->

    <!-- ============================================  -->
	<!-- Create packages folder                        -->
	<!-- ============================================  -->
	<target name="prepare">
		<!-- Check if the target folder exists. If not, create it -->
		<if>
			<available file="${targetdir}" type="dir" property="dir.Exist" />
			<then>
				<echo msg="Removing old ${targetdir}" />
				<delete dir="${targetdir}" />
			</then>
		</if>


		<!-- remove old packaged file -->
		<echo msg="Removing old package ${package.dir}/${extension}-v${version}.zip" />
		<delete file="${package.dir}/${extension}-v${version}.zip" />



		<echo msg="Making directory to store the packages at ${targetdir}" />
		<mkdir dir="${targetdir}" />

	</target>

	<!-- ============================================  -->
	<!-- Target: build                                 -->
	<!-- ============================================  -->
	<!-- Copy the source files to the target folder -->

	<target name="build" depends="prepare">

		<echo msg="Copying INSTALLER files to build directory..."/>

		<copy todir="${targetdir}">
			<fileset dir="${project.basedir}/">
				<include name="LICENSE.txt"/>
				<include name="redslider.xml"/>
				<include name="install.php"/>
			</fileset>
		</copy>
		<copy todir="${targetdir}/component/admin">
			<fileset dir="${project.basedir}/">
				<include name="redslider.xml"/>
				<include name="install.php"/>
			</fileset>
		</copy>

		<echo msg="Copying COMPONENT folder to build directory..."/>
		<copy todir="${targetdir}/component">
			<fileset dir="${project.basedir}/component">
				<include name="**"/>
				<exclude name=".*"/>
			</fileset>
		</copy>

		<echo msg="Copying MODULES folder to build directory..."/>
		<copy todir="${targetdir}/modules">
			<fileset dir="${project.basedir}/modules">
				<include name="**"/>
				<exclude name=".*"/>
			</fileset>
		</copy>

		<echo msg="Copying PLUGINS folder to build directory:"/>
		<echo msg="- section_article"/>
		<copy todir="${targetdir}/plugins/redslider_sections/section_article">
			<fileset dir="${project.basedir}/plugins/redslider_sections/section_article">
				<include name="**"/>
				<exclude name=".*"/>
			</fileset>
		</copy>
		<echo msg="- section_standard"/>
		<copy todir="${targetdir}/plugins/redslider_sections/section_standard">
			<fileset dir="${project.basedir}/plugins/redslider_sections/section_standard">
				<include name="**"/>
				<exclude name=".*"/>
			</fileset>
		</copy>
		<echo msg="- section_video"/>
		<copy todir="${targetdir}/plugins/redslider_sections/section_video">
			<fileset dir="${project.basedir}/plugins/redslider_sections/section_video">
				<include name="**"/>
				<exclude name=".*"/>
			</fileset>
		</copy>

		<echo msg="Copying MEDIA folder to build directory..."/>
		<copy todir="${targetdir}/media/com_redslider">
			<fileset dir="${project.basedir}/media/com_redslider">
				<include name="**"/>
				<exclude name=".*"/>
			</fileset>
		</copy>

		<echo message="Copying libraries..."/>
		<copy todir="${targetdir}/libraries" overwrite="true">
			<fileset dir="${project.basedir}/libraries">
				<include name="**"/>
			</fileset>
		</copy>
	</target>

    <target name="copyredcore">
        <phing phingfile="redCORE/redcore_copy_mandatory.xml"
               target="copyframework"
               haltonfailure="true">
            <property name="redcoretargetdir" value="${targetdir}/redCORE" />
            <property name="redcorepath" value="${project.basedir}/redCORE" />
        </phing>
    </target>

	<!-- ============================================  -->
	<!-- (DEFAULT)  Target: dist                       -->
	<!-- ============================================  -->
	<target name="dist" depends="build, copyredcore">

		<echo msg="Creating ZIP archive..."/>

		<zip destfile="${targetdir}/../${extension}-v${version}.zip">
			<fileset dir="${targetdir}">
				<include name="**"/>
				<exclude name=".*"/>
			</fileset>
		</zip>

		<echo msg="Files copied and compressed in build directory OK!"/>

		<delete dir="${targetdir}" />
	</target>
</project>
